# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Article {
  author: String
  category: Category
  content: String
  createdAt: DateTime!
  description: String
  feed: Feed
  guid: String
  id: String!
  image: String
  keywords: [Keyword!]
  lang: String
  logo: String
  path: String
  published: Boolean!
  publishedAt: DateTime
  publisher: String
  title: String!
  updatedAt: DateTime!
  url: String!
}

type Category {
  articles: [Article!]
  createdAt: DateTime!
  description: String
  feeds: [Feed!]
  id: String!
  keywords: [Keyword!]
  name: String!
  path: String
  published: Boolean!
  updatedAt: DateTime!
}

input CreateArticleInput {
  author: String
  category: String
  content: String
  description: String
  feed: String
  guid: String
  image: String
  lang: String
  logo: String
  path: String
  published: Boolean = true
  publishedAt: DateTime
  publisher: String
  title: String!
  url: String!
}

input CreateCategoryInput {
  description: String
  id: String
  name: String!
  path: String
  published: Boolean = true
}

input CreateFeedInput {
  author: String
  category: String
  description: String
  feedType: FeedType = NONE
  feedUrl: String
  image: String
  lang: String
  logo: String
  path: String
  published: Boolean = true
  publisher: String
  title: String
  url: String
}

input CreateKeywordInput {
  id: String
  name: String!
  published: Boolean = true
  tag: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Feed {
  articles: [Article!]
  author: String
  category: Category
  createdAt: DateTime!
  description: String
  feedType: String
  feedUrl: String
  id: String!
  image: String
  lang: String
  logo: String
  path: String
  published: Boolean!
  publisher: String
  title: String
  updatedAt: DateTime!
  url: String!
}

enum FeedType {
  ATOM
  NONE
  RSS
}

type Keyword {
  id: String!
  name: String!
  tag: String
}

type Mutation {
  createArticle(article: CreateArticleInput!): Article!
  createCategory(category: CreateCategoryInput!): Category!
  createFeed(feed: CreateFeedInput!): Feed!
  createKeyword(keyword: CreateKeywordInput!): Keyword!
  removeArticle(id: String!): Article!
  removeCategory(id: String!): Category!
  removeFeed(id: String!): Feed!
  removeKeyword(id: String!): Keyword!
  updateArticle(article: UpdateArticleInput!): Article!
  updateCategory(category: UpdateCategoryInput!): Category!
  updateFeed(feed: UpdateFeedInput!): Feed!
  updateKeyword(keyword: UpdateKeywordInput!): Keyword!
}

type Query {
  article(id: String!): Article!
  articles: [Article!]!
  categories: [Category!]!
  category(id: String!): Category!
  feed(id: String!): Feed!
  feeds: [Feed!]!
  keyword(id: String!): Keyword!
  keywords: [Keyword!]!
}

input UpdateArticleInput {
  author: String
  category: String
  content: String
  description: String
  feed: String
  guid: String
  id: String
  image: String
  lang: String
  logo: String
  path: String
  published: Boolean = true
  publishedAt: DateTime
  publisher: String
  title: String
  url: String
}

input UpdateCategoryInput {
  description: String
  id: String
  name: String
  path: String
  published: Boolean = true
}

input UpdateFeedInput {
  author: String
  category: String
  description: String
  feedType: FeedType = NONE
  feedUrl: String
  id: String
  image: String
  lang: String
  logo: String
  path: String
  published: Boolean = true
  publisher: String
  title: String
  url: String
}

input UpdateKeywordInput {
  id: String
  name: String
  tag: String
}
